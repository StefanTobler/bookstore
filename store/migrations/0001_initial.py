# Generated by Django 3.1.1 on 2020-10-30 17:17

import address.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import store.models
import store.validators
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('address', '0003_auto_20200830_1851'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=16)),
                ('middle_name', models.CharField(default='', max_length=16)),
                ('last_name', models.CharField(max_length=16)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('selling_price', models.FloatField(validators=[store.validators.validate_positive])),
                ('buying_price', models.FloatField(validators=[store.validators.validate_positive])),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stock', models.IntegerField(default=0)),
                ('image', models.ImageField(default='default.jpg', upload_to='item_images')),
                ('archived', models.BooleanField(default=False)),
                ('sold', models.PositiveIntegerField(default=0)),
                ('featured', models.BooleanField(default=True)),
                ('rating', models.FloatField(default=0, validators=[store.validators.validate_rating])),
                ('threshold', models.IntegerField(default=2)),
                ('title', models.CharField(max_length=128)),
                ('summary', models.TextField(default='This is a book!')),
                ('publication_year', models.PositiveIntegerField()),
                ('isbn', models.CharField(max_length=14, validators=[store.validators.validate_isbn])),
                ('edition', models.PositiveIntegerField(default=0)),
                ('authors', models.ManyToManyField(to='store.Author')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('genre', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='New Promotion!', max_length=64)),
                ('expiry', models.DateTimeField()),
                ('code', models.CharField(max_length=20, unique=True)),
                ('discount_type', models.CharField(choices=[('P', 'Percentage'), ('D', 'Dollar')], max_length=1)),
                ('discount_amount', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='OrderedBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('ORDERED', 'Ordered'), ('SHIPPED', 'Shipped'), ('DELIVERED', 'Delivered')], default=store.models.OrderStatus['ORDERED'], max_length=10)),
                ('date', models.DateField(auto_now_add=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.book')),
                ('shipping_address', address.models.AddressField(on_delete=django.db.models.deletion.CASCADE, to='address.address')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='quantity')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.book', verbose_name='item')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.cart', verbose_name='cart')),
            ],
        ),
        migrations.AddField(
            model_name='cart',
            name='promotion',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.promotion'),
        ),
        migrations.AddField(
            model_name='cart',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='book',
            name='genres',
            field=models.ManyToManyField(to='store.Genre'),
        ),
        migrations.AddField(
            model_name='book',
            name='publisher',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, to='store.publisher'),
        ),
    ]
